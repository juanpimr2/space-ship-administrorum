volumes:
  pgdata:
  kafka-persistence:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka-broker-1:
    image: bitnami/kafka:latest
    container_name: kafka-broker
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3  # Factor de replicación de los topics de offsets
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'  # Habilitar la creación automática de topics
      KAFKA_NUM_PARTITIONS: 6  # Número de particiones para el topic de auditoría
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3  # Factor de replicación predeterminado para nuevos topics
    ports:
      - "9092:9092"

  db:
    image: postgres:latest
    container_name: my_postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    build: .
    container_name: my_spring_boot_app
    ports:
      - "8080:8080"
    depends_on:
      - db
      
    volumes:
      - kafka-persistence:/bitnami/kafka

  
